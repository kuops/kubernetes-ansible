---
- name: 判断 bootstrap-token 是否存在
  command: /usr/local/bin/kubectl -n kube-system get secret bootstrap-token-{{ bootstrap_token_pub }}
  register: get_token_result
  ignore_errors: True
  delegate_to: "{{ groups['master'][0] }}"
  run_once: True

- name: 创建 bootstrap-token 密钥
  shell: |
    /usr/local/bin/kubectl -n kube-system create secret generic bootstrap-token-{{ bootstrap_token_pub }} \
        --type 'bootstrap.kubernetes.io/token' \
        --from-literal description='cluster bootstrap token' \
        --from-literal token-id={{ bootstrap_token_pub }} \
        --from-literal token-secret={{ bootstrap_token_secret }} \
        --from-literal usage-bootstrap-authentication=true \
        --from-literal usage-bootstrap-signing=true 

  delegate_to: "{{ groups['master'][0] }}"
  run_once: True
  when:  get_token_result is failed

- stat: path={{ bootstrap_config }}
  become: true
  become_user: root
  register: bootstrap_conf_result

- name: 生成 bootstrap-kubeconfig 文件
  when: not bootstrap_conf_result.stat.exists
  command: "{{ item }}"
  delegate_to: "{{ groups['master'][0] }}"
  run_once: true
  with_items:
    - "/usr/local/bin/kubectl config set-cluster {{ cluster_name }} --certificate-authority={{ ca_cert }} --embed-certs=true --server={{ kube_apiserver }} --kubeconfig={{ bootstrap_config }}"
    - "/usr/local/bin/kubectl config set-credentials {{ bootstrap_user }} --token={{ bootstrap_token }}  --kubeconfig={{ bootstrap_config }}"
    - "/usr/local/bin/kubectl config set-context {{ bootstrap_user }}@{{ cluster_name }} --cluster={{ cluster_name }} --user={{ bootstrap_user }} --kubeconfig={{ bootstrap_config }}"
    - "/usr/local/bin/kubectl config use-context {{ bootstrap_user }}@{{ cluster_name }} --kubeconfig={{ bootstrap_config }}"

- name: 分发 {{ bootstrap_config }} 文件
  synchronize:
    mode: push
    src: "{{ bootstrap_config }}"
    dest: "{{ bootstrap_config }}"
    rsync_opts:
    - "--rsh=/bin/ssh -o StrictHostKeyChecking=no -o PasswordAuthentication=no -i /vagrant/files/ssh-keys/id_rsa"
  delegate_to: "{{ groups['master'][0] }}"

- include: approve-csr.yml
