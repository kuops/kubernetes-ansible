---
- name: Check if host has NetworkManager
  command: systemctl show NetworkManager # noqa 303
  register: nm_check
  failed_when: false
  changed_when: false

- name: Ensure NetworkManager conf.d dir
  file:
    path: "/etc/NetworkManager/conf.d"
    state: directory
    recurse: yes
  when: nm_check.rc == 0

- name: Prevent NetworkManager from managing Calico interfaces
  copy:
    content: |
      [keyfile]
      unmanaged-devices=interface-name:cali*;interface-name:tunl*
    dest: /etc/NetworkManager/conf.d/calico.conf
  when:
  - nm_check.rc == 0
  notify:
  - reload NetworkManager

- name: Create kubernetes addons dir
  file:
    path: "{{ kubernetes_addons_dir }}"
    state: directory

- name: Create calico addons yaml
  template:
    src: calico-typha.yaml.j2
    dest: "{{ kubernetes_addons_dir }}/calico-typha.yaml"
  delegate_to: "{{ groups['kube_master'][0] }}"
  register: calico_addons

- name: Check calico-typha addons exists
  shell: |
    kubectl get deploy -n kube-system calico-typha
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
  delegate_to: "{{ groups['kube_master'][0] }}"
  ignore_errors: yes
  changed_when: False
  register: get_calico

- name: Apply calico deployment and rbac
  shell: |
    kubectl --kubeconfig={{ kubernetes_kubeconfig_admin_conf }} \
    apply -f {{ kubernetes_addons_dir }}/calico-typha.yaml
  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
  delegate_to: "{{ groups['kube_master'][0] }}"
  run_once: yes
  when: calico_addons.changed or 'not found' in get_calico.stderr
